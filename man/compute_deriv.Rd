% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_deriv.R
\name{compute_deriv}
\alias{compute_deriv}
\title{Compute the derivative of the negative log-likelihood}
\usage{
compute_deriv(family)
}
\arguments{
\item{family}{A GLM family with family and link}
}
\value{
A list of two functions
\describe{
\item{g}{A function which takes two inputs -- a vector of response y and a vector of linear predictors t -- and returns the derivative of the negative log-likelihood  w.r.t. the linear predictor at y}
\item{gprime}{A function which takes two inputs -- a vector of response y and a vector of linear predictors t -- and returns the *second* derivative of the negative log-likelihood  w.r.t. the linear predictor at y}
}
}
\description{
Compute the derivative of the negative log-likelihood of a GLM w.r.t. the linear predictor

Let \eqn{f_y(t)} be the negative log-likelihood function when the linear predictor is \eqn{t}
and the response is \eqn{y}. This function computes 
\deqn{
g(t) = f'_y(t)
}
and 
\deqn{
g'(t)=f''_y(t).
}
This function uses *formula* of GLM likelihoods. Currently, it supports Poisson regression (log link) and binary regression 
(with logit/probit link).

Consider a logistic regression, \eqn{f_y(t) = \log(1+e^{-yt})}, where \eqn{y = \pm 1}. Then
\deqn{
g(t) = \frac{-y}{1+e^{yt}},
}
and 
\deqn{
g'(t) = \frac{1}{(1+e^{yt})(1+e^{-yt})}. 
}

For a probit regression, \eqn{f_y(t) = \log(\Phi(yt))} where \eqn{\Phi(\cdot)} is the normal cdf.
Then,
\deqn{
g(t) = \frac{-y\phi(yt)}{\Phi(yt)},
}
where \eqn{\phi} is the normal pdf, and 
\deqn{
g'(t) = \frac{\phi(yt)^2}{\Phi(yt)^2} - \frac{\phi'(yt)}{\Phi(yt)}.
}
For a Poisson regression, \eqn{f_y(t) = e^t - yt + \log(y!)}, so 
\deqn{
g(t) = e^t - y,
}
and 
\deqn{
g't(t) = e^t. 
}
}
